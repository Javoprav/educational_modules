version: '3.9'

services:
  db:
    image: postgres:14-alpine
    container_name: db
    environment:
      PGDATA: /var/lib/postgresql/pgdata
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    restart: always
    build:
      context: .
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    expose:
      - 8000
    volumes:
      - .:/app
      - .static_volume:/app/static
      - .media_volume/app/media
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py loaddata data.json
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

  nginx:
    build: ./nginx
    volumes:
      - .static_volume:/app/static
      - .media_volume:/app/media
    ports:
      - 80:80
    depends_on:
      - api

volumes:
  postgres_data:
  static_volume:
  media_volume: