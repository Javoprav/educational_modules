version: '3.9'

services:
  db:
    restart: always
    container_name: db
    env_file:
      - ./.env
    image: postgres:14.9-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./.env.docker
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    restart: always
    build:
      context: .
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./.env.docker/:/app/.env
    command: >
      bash -c "python  manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py loaddata data.json
      && python manage.py runserver 0.0.0.0:8000"

volumes:
  postgres_data: